class Solution {
public:
    vector<vector<int>> fourSum(vector<int>& nums, int target) {
         int n = nums.size();
        sort(nums.begin(), nums.end());
        vector<vector<int>> ans;

        for (int i = 0; i < n; i++) {
            if (i > 0 && nums[i - 1] == nums[i]) continue; // Skip duplicates for i

             for (int j = i + 1; j < n; j++) {
                if (j > i + 1 && nums[j] == nums[j - 1]) continue; // Skip duplicates for j

                int p = j + 1; 
                int q = n - 1;

                while (p < q) {
                    double sum = nums[i] + nums[j];
                    sum +=  nums[p] + nums[q];

                    if(sum<target){
                        p++;
                    }else if (sum>target){
                        q--;
                    } else{
                        ans.push_back({nums[i],nums[j],nums[p],nums[q]});

                        while (p < q && nums[p] == nums[p + 1]) p++;
                        while (p < q && nums[q] == nums[q - 1]) q--;

                        p++;
                        q--;
                    }
                }
            }
        
        }
        return ans;
    }
};
